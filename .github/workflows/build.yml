name: Build Plugin
on:
  push:
    branches:
      - main
      - dev
    tags-ignore:
      - '**'
  pull_request:
  workflow_dispatch:

permissions:
  contents: write

env:
  # Stop wasting time caching packages
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true
  # Disable sending usage data to Microsoft
  DOTNET_CLI_TELEMETRY_OPTOUT: true
  PLUGIN_NAME: Lidarr.Plugin.Tidal
  PLUGIN_VERSION: 10.0.1.${{ github.run_number }}
  MINIMUM_LIDARR_VERSION: 2.2.4.4129
  DOTNET_VERSION: 8.0.404

jobs:
  build:
    strategy:
      matrix:
        framework: [ net6.0 ]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: true
          fetch-depth: 0
          tags: true
      - name: Setup .NET Core
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}
      - name: Create global.json
        run: |
          echo '{"sdk":{"version": "${{ env.DOTNET_VERSION }}"}}' > ./global.json
      - name: Generate metadata
        id: gen_meta
        run: |
          echo "branch=${GITHUB_REF#refs/heads/}" | tr '/' '-'  >> $GITHUB_OUTPUT
      - name: Update Version Info
        run: |
          sed -i'' -e "s/<AssemblyVersion>[0-9.*]\+<\/AssemblyVersion>/<AssemblyVersion>$PLUGIN_VERSION<\/AssemblyVersion>/g" src/Directory.Build.props
          sed -i'' -e "s/<AssemblyConfiguration>[\$()A-Za-z-]\+<\/AssemblyConfiguration>/<AssemblyConfiguration>${{ steps.gen_meta.outputs.branch }}<\/AssemblyConfiguration>/g" src/Directory.Build.props
          sed -i'' -e "s/<AssemblyVersion>[0-9.*]\+<\/AssemblyVersion>/<AssemblyVersion>$MINIMUM_LIDARR_VERSION<\/AssemblyVersion>/g" ext/Lidarr/src/Directory.Build.props
      - name: Build
        run: |
          dotnet restore src/*.sln
          dotnet build src/*.sln -c Release -f ${{ matrix.framework }}
      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.PLUGIN_NAME }}.${{ matrix.framework }}
          path: ./_plugins/net6.0/${{ env.PLUGIN_NAME }}/${{ env.PLUGIN_NAME }}.*
      - name: Generate Changelog
        if: github.ref == 'refs/heads/main'
        run: |
          echo "Changelog:" > changelog.txt
          git log --oneline $(git describe --tags --abbrev=0)..HEAD | awk '{print "- " substr($0, index($0,$2))}' >> changelog.txt
      - name: Display Changelog
        if: github.ref == 'refs/heads/main'
        run: cat changelog.txt
      - name: Zip Plugin
        if: github.ref == 'refs/heads/main'
        run: |
          sudo apt update && sudo apt install -y p7zip-full
          7z a -tzip ${{ env.PLUGIN_NAME }}.net6.0.zip ./_plugins/net6.0/${{ env.PLUGIN_NAME }}/${{ env.PLUGIN_NAME }}.*
      - name: Upload Release Asset
        uses: softprops/action-gh-release@v2
        if: github.ref == 'refs/heads/main'
        with:
          tag_name: ${{ env.PLUGIN_VERSION }}
          name: ${{ env.PLUGIN_VERSION }}
          body_path: changelog.txt
          draft: true
          prerelease: false
          files: |
            ${{ env.PLUGIN_NAME }}.net6.0.zip
